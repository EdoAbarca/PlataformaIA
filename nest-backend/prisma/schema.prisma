// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-1.1.x", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Role {
  id   Int    @id @default(autoincrement())
  name String @unique
  @@map("roles")
}

model AI {
  id      Int      @id @default(autoincrement())
  name    String   
  keys    Key[]
  results Result[]

  @@map("ais")
}

model Key {
  id     Int    @id @default(autoincrement())
  ai_key String
  ai     AI     @relation(fields: [ai_id], references: [id], onDelete: Cascade)
  ai_id  Int

  @@map("keys")
}

model Analysis {
  id        Int        @id @default(autoincrement())
  created   DateTime   @default(now()) @db.Date
  title     String
  documents Document[]

  @@map("analysis")
}

model Document {
  id          Int      @id @default(autoincrement())
  title       String
  results     Result[]
  analysis    Analysis @relation(fields: [analysis_id], references: [id], onDelete: Cascade)
  analysis_id Int

  //file File
  @@map("documents")
}

model Result {
  id        Int      @id @default(autoincrement())
  created   DateTime @default(now())
  ia_score  Int
  ia_result String

  ai          AI       @relation(fields: [ai_id], references: [id], onDelete: Cascade)
  ai_id       Int
  document    Document @relation(fields: [document_id], references: [id], onDelete: Cascade)
  document_id Int

  @@map("results")
}
